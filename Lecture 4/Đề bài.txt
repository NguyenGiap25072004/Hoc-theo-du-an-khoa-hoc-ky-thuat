Phần 1: Recursion (Đệ quy)

    1.1. Tính giai thừa bằng đệ quy. Viết hàm đệ quy để tính giai thừa của n (n! = n * (n-1)!).

    1.2. Tìm số Fibonacci thứ n bằng đệ quy. Viết hàm đệ quy để tìm số Fibonacci thứ n (F(n) = F(n-1) + F(n-2)).

    1.3. Đảo ngược chuỗi bằng đệ quy. Viết hàm đệ quy để đảo ngược chuỗi, bằng cách hoán đổi ký tự đầu và cuối.

    1.4. Tìm tổng của một mảng bằng đệ quy. Viết hàm đệ quy để tính tổng các phần tử trong danh sách.

    1.5. Kiểm tra chuỗi đối xứng (Palindrome) bằng đệ quy. Viết hàm đệ quy để kiểm tra xem chuỗi có giống nhau khi đọc ngược không.

Phần 2: Binary Search Tree (BST)

    2.1. Chèn phần tử vào Binary Search Tree (BST). Viết lớp BST và phương thức insert() để chèn phần tử vào cây.

    2.2. Tìm kiếm một phần tử trong BST. Viết phương thức search() để kiểm tra xem một phần tử có tồn tại trong BST không.

    2.3. Duyệt cây theo thứ tự trung tố (Inorder Traversal). Viết hàm duyệt cây theo thứ tự trung tố để lấy danh sách phần tử theo thứ tự tăng dần.

Phần 3: Sorting Algorithms

    3.1. Cài đặt Quick Sort. Viết thuật toán Quick Sort để sắp xếp danh sách theo thứ tự tăng dần.

    3.2. So sánh thời gian chạy giữa Bubble Sort và Merge Sort. Viết chương trình đo thời gian chạy của hai thuật toán trên một danh sách lớn.